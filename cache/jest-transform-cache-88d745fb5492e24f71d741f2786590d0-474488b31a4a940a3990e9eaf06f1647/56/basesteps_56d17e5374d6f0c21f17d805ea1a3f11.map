{"version":3,"names":["_getJestObj","mock","useNavigation","jest","fn","mockReturnValue","navigate","_interopRequireDefault","require","_reactNative","_uuid","_jestCucumber","_native","_Base","_jsxRuntime","_require","uuid","uuidv4","feature","loadFeature","navigation","screen","defineFeature","test","beforeEach","render","jsx","default","_ref","given","when","and","then","expect","toBeTruthy","movieTab","getByTestId","act","fireEvent","press","searchBar","submitButton","changeText"],"sources":["base.steps.tsx"],"sourcesContent":["import {act, fireEvent, render, waitFor} from '@testing-library/react-native';\r\nimport 'react-native-get-random-values';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {loadFeature, defineFeature} from 'jest-cucumber';\r\nimport {View, TextInput, Button} from 'react-native';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport Base from './../../Base';\r\nconst uuid = uuidv4();\r\nconst feature = loadFeature('Apps/features/base.feature');\r\nconst navigation = useNavigation<NativeStackNavigationProp<any>>();\r\n\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\nlet screen: any;\r\ndefineFeature(feature, test => {\r\n  beforeEach(() => {\r\n    screen = render(<Base />);\r\n  });\r\n  test('Search for a movie', ({given, when, and, then}) => {\r\n    given('I am on the search page', () => {\r\n      expect(screen).toBeTruthy();\r\n    });\r\n    when('I select the \"Movie\" tab', () => {\r\n      const movieTab = screen.getByTestId('movie-tab');\r\n      act(() => {\r\n        fireEvent.press(movieTab);\r\n      });\r\n    });\r\n    and('I enter \"Manmadhudu\" in the search input and hit submit', () => {\r\n      const searchBar = screen.getByTestId('search-movie');\r\n      const submitButton = screen.getByTestId('submit-button');\r\n      act(() => {\r\n        fireEvent.changeText(searchBar, 'Manmadhudu');\r\n      });\r\n    });\r\n\r\n    then('I should see the search results card', () => {});\r\n\r\n    and('I should be able to click the card to view more details', () => {});\r\n  });\r\n});\r\n"],"mappings":"AAYAA,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE,YAAM;EAC1C,OAAO;IACLC,aAAa,EAAEC,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;MACvCC,QAAQ,EAAEH,IAAI,CAACC,EAAE;IACnB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAAC,IAAAG,sBAAA,GAAAC,OAAA;AAlBH,IAAAC,YAAA,GAAAD,OAAA;AACAA,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AAEA,IAAAI,OAAA,GAAAJ,OAAA;AAEA,IAAAK,KAAA,GAAAN,sBAAA,CAAAC,OAAA;AAAgC,IAAAM,WAAA,GAAAN,OAAA;AAAA,SAAAR,YAAA;EAAA,IAAAe,QAAA,GAAAP,OAAA;IAAAL,IAAA,GAAAY,QAAA,CAAAZ,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAChC,IAAMa,IAAI,GAAG,IAAAC,QAAM,GAAE;AACrB,IAAMC,OAAO,GAAG,IAAAC,yBAAW,EAAC,4BAA4B,CAAC;AACzD,IAAMC,UAAU,GAAG,IAAAlB,qBAAa,GAAkC;AASlE,IAAImB,MAAW;AACf,IAAAC,2BAAa,EAACJ,OAAO,EAAE,UAAAK,IAAI,EAAI;EAC7BC,UAAU,CAAC,YAAM;IACfH,MAAM,GAAG,IAAAI,mBAAM,EAAC,IAAAX,WAAA,CAAAY,GAAA,EAACb,KAAA,CAAAc,OAAI,KAAG,CAAC;EAC3B,CAAC,CAAC;EACFJ,IAAI,CAAC,oBAAoB,EAAE,UAAAK,IAAA,EAA8B;IAAA,IAA5BC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;MAAEC,GAAG,GAAAH,IAAA,CAAHG,GAAG;MAAEC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;IACjDH,KAAK,CAAC,yBAAyB,EAAE,YAAM;MACrCI,MAAM,CAACZ,MAAM,CAAC,CAACa,UAAU,EAAE;IAC7B,CAAC,CAAC;IACFJ,IAAI,CAAC,0BAA0B,EAAE,YAAM;MACrC,IAAMK,QAAQ,GAAGd,MAAM,CAACe,WAAW,CAAC,WAAW,CAAC;MAChD,IAAAC,gBAAG,EAAC,YAAM;QACRC,sBAAS,CAACC,KAAK,CAACJ,QAAQ,CAAC;MAC3B,CAAC,CAAC;IACJ,CAAC,CAAC;IACFJ,GAAG,CAAC,yDAAyD,EAAE,YAAM;MACnE,IAAMS,SAAS,GAAGnB,MAAM,CAACe,WAAW,CAAC,cAAc,CAAC;MACpD,IAAMK,YAAY,GAAGpB,MAAM,CAACe,WAAW,CAAC,eAAe,CAAC;MACxD,IAAAC,gBAAG,EAAC,YAAM;QACRC,sBAAS,CAACI,UAAU,CAACF,SAAS,EAAE,YAAY,CAAC;MAC/C,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFR,IAAI,CAAC,sCAAsC,EAAE,YAAM,CAAC,CAAC,CAAC;IAEtDD,GAAG,CAAC,yDAAyD,EAAE,YAAM,CAAC,CAAC,CAAC;EAC1E,CAAC,CAAC;AACJ,CAAC,CAAC"}
{"version":3,"names":["_getJestObj","mock","useNavigation","jest","fn","mockReturnValue","navigate","_interopRequireDefault","require","_reactNative","_uuid","_jestCucumber","_native","_Details","_jsxRuntime","_require","uuid","uuidv4","feature","loadFeature","navigation","screen","defineFeature","test","_ref","given","when","and","then","render","jsx","default"],"sources":["details.steps.tsx"],"sourcesContent":["import {act, fireEvent, render, waitFor} from '@testing-library/react-native';\r\nimport 'react-native-get-random-values';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {loadFeature, defineFeature} from 'jest-cucumber';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {NativeStackNavigationProp} from '@react-navigation/native-stack';\r\nimport Details from '../../Details';\r\nimport axios from 'axios';\r\nconst uuid = uuidv4();\r\nconst feature = loadFeature('Apps/features/details.feature');\r\nconst navigation = useNavigation<NativeStackNavigationProp<any>>();\r\njest.mock('axios');\r\njest.mock('@react-navigation/native', () => {\r\n  return {\r\n    useNavigation: jest.fn().mockReturnValue({\r\n      navigate: jest.fn(),\r\n    }),\r\n  };\r\n});\r\nlet screen: any;\r\ndefineFeature(feature, test => {\r\n  test('Display details of a movie', ({given, when, and, then}) => {\r\n    screen = render(<Details />);\r\n\r\n    given('I am on the details page', () => {});\r\n    then('I should see the title \"Manmadhudu\"', () => {});\r\n    and('I should see the release year \"2002\"', () => {});\r\n\r\n    and('I should see the genre \"Comedy, Romance\"', () => {});\r\n\r\n    and('I should see the rated \"N/A\"', () => {});\r\n    and(\r\n      'I should see the plot \"A misogynist is forced by circumstances to work with a woman.\"',\r\n      () => {},\r\n    );\r\n    and(\r\n      'I should see the actors \"Nagarjuna Akkineni, Sonali Bendre, Anshu\"',\r\n      () => {},\r\n    );\r\n    and('I should see the ratings', () => {});\r\n    and('I should not see the episodes', () => {});\r\n  });\r\n});\r\n"],"mappings":"AAWAA,WAAA,GAAKC,IAAI,CAAC,OAAO,CAAC;AAClBD,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE,YAAM;EAC1C,OAAO;IACLC,aAAa,EAAEC,IAAI,CAACC,EAAE,EAAE,CAACC,eAAe,CAAC;MACvCC,QAAQ,EAAEH,IAAI,CAACC,EAAE;IACnB,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAAC,IAAAG,sBAAA,GAAAC,OAAA;AAlBH,IAAAC,YAAA,GAAAD,OAAA;AACAA,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AACA,IAAAI,OAAA,GAAAJ,OAAA;AAEA,IAAAK,QAAA,GAAAN,sBAAA,CAAAC,OAAA;AAAoC,IAAAM,WAAA,GAAAN,OAAA;AAAA,SAAAR,YAAA;EAAA,IAAAe,QAAA,GAAAP,OAAA;IAAAL,IAAA,GAAAY,QAAA,CAAAZ,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEpC,IAAMa,IAAI,GAAG,IAAAC,QAAM,GAAE;AACrB,IAAMC,OAAO,GAAG,IAAAC,yBAAW,EAAC,+BAA+B,CAAC;AAC5D,IAAMC,UAAU,GAAG,IAAAlB,qBAAa,GAAkC;AASlE,IAAImB,MAAW;AACf,IAAAC,2BAAa,EAACJ,OAAO,EAAE,UAAAK,IAAI,EAAI;EAC7BA,IAAI,CAAC,4BAA4B,EAAE,UAAAC,IAAA,EAA8B;IAAA,IAA5BC,KAAK,GAAAD,IAAA,CAALC,KAAK;MAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;MAAEC,GAAG,GAAAH,IAAA,CAAHG,GAAG;MAAEC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;IACzDP,MAAM,GAAG,IAAAQ,mBAAM,EAAC,IAAAf,WAAA,CAAAgB,GAAA,EAACjB,QAAA,CAAAkB,OAAO,KAAG,CAAC;IAE5BN,KAAK,CAAC,0BAA0B,EAAE,YAAM,CAAC,CAAC,CAAC;IAC3CG,IAAI,CAAC,qCAAqC,EAAE,YAAM,CAAC,CAAC,CAAC;IACrDD,GAAG,CAAC,sCAAsC,EAAE,YAAM,CAAC,CAAC,CAAC;IAErDA,GAAG,CAAC,0CAA0C,EAAE,YAAM,CAAC,CAAC,CAAC;IAEzDA,GAAG,CAAC,8BAA8B,EAAE,YAAM,CAAC,CAAC,CAAC;IAC7CA,GAAG,CACD,uFAAuF,EACvF,YAAM,CAAC,CAAC,CACT;IACDA,GAAG,CACD,oEAAoE,EACpE,YAAM,CAAC,CAAC,CACT;IACDA,GAAG,CAAC,0BAA0B,EAAE,YAAM,CAAC,CAAC,CAAC;IACzCA,GAAG,CAAC,+BAA+B,EAAE,YAAM,CAAC,CAAC,CAAC;EAChD,CAAC,CAAC;AACJ,CAAC,CAAC"}
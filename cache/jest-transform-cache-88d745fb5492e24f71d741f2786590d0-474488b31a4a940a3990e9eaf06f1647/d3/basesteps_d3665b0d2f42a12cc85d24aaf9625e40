8d47aef45ca2585f5eec0317455a27ad
_getJestObj().mock('axios');
_getJestObj().mock('@react-navigation/native', function () {
  return {
    useNavigation: jest.fn().mockReturnValue({
      navigate: jest.fn()
    })
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("@testing-library/react-native");
require("react-native-get-random-values");
var _uuid = require("uuid");
var _jestCucumber = require("jest-cucumber");
var _native = require("@react-navigation/native");
var _Base = _interopRequireDefault(require("./../../Base"));
var _axios = _interopRequireDefault(require("axios"));
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var uuid = (0, _uuid.v4)();
var feature = (0, _jestCucumber.loadFeature)('Apps/features/base.feature');
var navigation = (0, _native.useNavigation)();
var screen;
(0, _jestCucumber.defineFeature)(feature, function (test) {
  test('Search for a movie', function (_ref) {
    var given = _ref.given,
      when = _ref.when,
      and = _ref.and,
      then = _ref.then;
    screen = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Base.default, {}));
    _axios.default.get.mockResolvedValueOnce({
      data: {
        Title: 'Manmadhudu',
        Year: '2002',
        Rated: 'N/A',
        Released: '20 Dec 2002',
        Runtime: '142 min',
        Genre: 'Comedy, Romance',
        Director: 'Vijay K. Bhaskar',
        Writer: 'Vijay K. Bhaskar, Trivikram Srinivas',
        Actors: 'Nagarjuna Akkineni, Sonali Bendre, Anshu',
        Plot: 'A misogynist is forced by circumstances to work with a woman.',
        Language: 'Telugu',
        Poster: 'https://m.media-amazon.com/images/M/MV5BOTE1M2IwMzktNjI1Mi00ZTFkLTg4MmMtNTZmMjk4YTdhODlkXkEyXkFqcGdeQXVyNjE2NTgxOTE@._V1_SX300.jpg',
        Ratings: [{
          Source: 'Internet Movie Database',
          Value: '8.3/10'
        }],
        imdbRating: '8.3',
        imdbVotes: '4,096',
        imdbID: 'tt0355742'
      }
    });
    given('I am on the search page', function () {
      expect(screen).toBeTruthy();
    });
    when('I select the "Movie" tab', function () {
      var movieTab = screen.getByTestId('movie-tab');
      (0, _reactNative.act)(function () {
        _reactNative.fireEvent.press(movieTab);
      });
    });
    and('I enter "Manmadhudu" in the search input and hit submit', (0, _asyncToGenerator2.default)(function* () {
      var searchBar = screen.getByTestId('search-movie');
      var submitButton = screen.getByTestId('submit-button');
      (0, _reactNative.act)(function () {
        _reactNative.fireEvent.changeText(searchBar, 'Manmadhudu');
        _reactNative.fireEvent.press(submitButton);
      });
    }));
    then('I should see the search results card', (0, _asyncToGenerator2.default)(function* () {
      yield (0, _reactNative.waitFor)(function () {
        var movieTitle = screen.getByText('Manmadhudu');
        var movieRating = screen.getByText('Rating: N/A');
        var movieYear = screen.getByText('2002');
        expect(movieTitle).toBeTruthy();
        expect(movieRating).toBeTruthy();
        expect(movieYear).toBeTruthy();
      });
    }));
    and('I should be able to click the card to view more details', function () {});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VOYXZpZ2F0aW9uIiwiamVzdCIsImZuIiwibW9ja1JldHVyblZhbHVlIiwibmF2aWdhdGUiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9hc3luY1RvR2VuZXJhdG9yMiIsIl9yZWFjdE5hdGl2ZSIsIl91dWlkIiwiX2plc3RDdWN1bWJlciIsIl9uYXRpdmUiLCJfQmFzZSIsIl9heGlvcyIsIl9qc3hSdW50aW1lIiwiX3JlcXVpcmUiLCJ1dWlkIiwidXVpZHY0IiwiZmVhdHVyZSIsImxvYWRGZWF0dXJlIiwibmF2aWdhdGlvbiIsInNjcmVlbiIsImRlZmluZUZlYXR1cmUiLCJ0ZXN0IiwiX3JlZiIsImdpdmVuIiwid2hlbiIsImFuZCIsInRoZW4iLCJyZW5kZXIiLCJqc3giLCJkZWZhdWx0IiwiYXhpb3MiLCJnZXQiLCJtb2NrUmVzb2x2ZWRWYWx1ZU9uY2UiLCJkYXRhIiwiVGl0bGUiLCJZZWFyIiwiUmF0ZWQiLCJSZWxlYXNlZCIsIlJ1bnRpbWUiLCJHZW5yZSIsIkRpcmVjdG9yIiwiV3JpdGVyIiwiQWN0b3JzIiwiUGxvdCIsIkxhbmd1YWdlIiwiUG9zdGVyIiwiUmF0aW5ncyIsIlNvdXJjZSIsIlZhbHVlIiwiaW1kYlJhdGluZyIsImltZGJWb3RlcyIsImltZGJJRCIsImV4cGVjdCIsInRvQmVUcnV0aHkiLCJtb3ZpZVRhYiIsImdldEJ5VGVzdElkIiwiYWN0IiwiZmlyZUV2ZW50IiwicHJlc3MiLCJzZWFyY2hCYXIiLCJzdWJtaXRCdXR0b24iLCJjaGFuZ2VUZXh0Iiwid2FpdEZvciIsIm1vdmllVGl0bGUiLCJnZXRCeVRleHQiLCJtb3ZpZVJhdGluZyIsIm1vdmllWWVhciJdLCJzb3VyY2VzIjpbImJhc2Uuc3RlcHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7YWN0LCBmaXJlRXZlbnQsIHJlbmRlciwgd2FpdEZvcn0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xyXG5pbXBvcnQgJ3JlYWN0LW5hdGl2ZS1nZXQtcmFuZG9tLXZhbHVlcyc7XHJcbmltcG9ydCB7djQgYXMgdXVpZHY0fSBmcm9tICd1dWlkJztcclxuaW1wb3J0IHtsb2FkRmVhdHVyZSwgZGVmaW5lRmVhdHVyZX0gZnJvbSAnamVzdC1jdWN1bWJlcic7XHJcbmltcG9ydCB7dXNlTmF2aWdhdGlvbn0gZnJvbSAnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJztcclxuaW1wb3J0IHtOYXRpdmVTdGFja05hdmlnYXRpb25Qcm9wfSBmcm9tICdAcmVhY3QtbmF2aWdhdGlvbi9uYXRpdmUtc3RhY2snO1xyXG5pbXBvcnQgQmFzZSBmcm9tICcuLy4uLy4uL0Jhc2UnO1xyXG5pbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xyXG5jb25zdCB1dWlkID0gdXVpZHY0KCk7XHJcbmNvbnN0IGZlYXR1cmUgPSBsb2FkRmVhdHVyZSgnQXBwcy9mZWF0dXJlcy9iYXNlLmZlYXR1cmUnKTtcclxuY29uc3QgbmF2aWdhdGlvbiA9IHVzZU5hdmlnYXRpb248TmF0aXZlU3RhY2tOYXZpZ2F0aW9uUHJvcDxhbnk+PigpO1xyXG5qZXN0Lm1vY2soJ2F4aW9zJyk7XHJcbmplc3QubW9jaygnQHJlYWN0LW5hdmlnYXRpb24vbmF0aXZlJywgKCkgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICB1c2VOYXZpZ2F0aW9uOiBqZXN0LmZuKCkubW9ja1JldHVyblZhbHVlKHtcclxuICAgICAgbmF2aWdhdGU6IGplc3QuZm4oKSxcclxuICAgIH0pLFxyXG4gIH07XHJcbn0pO1xyXG5sZXQgc2NyZWVuOiBhbnk7XHJcbmRlZmluZUZlYXR1cmUoZmVhdHVyZSwgdGVzdCA9PiB7XHJcbiAgdGVzdCgnU2VhcmNoIGZvciBhIG1vdmllJywgKHtnaXZlbiwgd2hlbiwgYW5kLCB0aGVufSkgPT4ge1xyXG4gICAgc2NyZWVuID0gcmVuZGVyKDxCYXNlIC8+KTtcclxuICAgIChheGlvcy5nZXQgYXMgamVzdC5Nb2NrKS5tb2NrUmVzb2x2ZWRWYWx1ZU9uY2Uoe1xyXG4gICAgICBkYXRhOiB7XHJcbiAgICAgICAgVGl0bGU6ICdNYW5tYWRodWR1JyxcclxuICAgICAgICBZZWFyOiAnMjAwMicsXHJcbiAgICAgICAgUmF0ZWQ6ICdOL0EnLFxyXG4gICAgICAgIFJlbGVhc2VkOiAnMjAgRGVjIDIwMDInLFxyXG4gICAgICAgIFJ1bnRpbWU6ICcxNDIgbWluJyxcclxuICAgICAgICBHZW5yZTogJ0NvbWVkeSwgUm9tYW5jZScsXHJcbiAgICAgICAgRGlyZWN0b3I6ICdWaWpheSBLLiBCaGFza2FyJyxcclxuICAgICAgICBXcml0ZXI6ICdWaWpheSBLLiBCaGFza2FyLCBUcml2aWtyYW0gU3Jpbml2YXMnLFxyXG4gICAgICAgIEFjdG9yczogJ05hZ2FyanVuYSBBa2tpbmVuaSwgU29uYWxpIEJlbmRyZSwgQW5zaHUnLFxyXG4gICAgICAgIFBsb3Q6ICdBIG1pc29neW5pc3QgaXMgZm9yY2VkIGJ5IGNpcmN1bXN0YW5jZXMgdG8gd29yayB3aXRoIGEgd29tYW4uJyxcclxuICAgICAgICBMYW5ndWFnZTogJ1RlbHVndScsXHJcbiAgICAgICAgUG9zdGVyOlxyXG4gICAgICAgICAgJ2h0dHBzOi8vbS5tZWRpYS1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJPVEUxTTJJd016a3ROakkxTWkwMFpURmtMVGc0TW1NdE5UWm1Nams0WVRkaE9EbGtYa0V5WGtGcWNHZGVRWFZ5TmpFMk5UZ3hPVEVALl9WMV9TWDMwMC5qcGcnLFxyXG4gICAgICAgIFJhdGluZ3M6IFt7U291cmNlOiAnSW50ZXJuZXQgTW92aWUgRGF0YWJhc2UnLCBWYWx1ZTogJzguMy8xMCd9XSxcclxuICAgICAgICBpbWRiUmF0aW5nOiAnOC4zJyxcclxuICAgICAgICBpbWRiVm90ZXM6ICc0LDA5NicsXHJcbiAgICAgICAgaW1kYklEOiAndHQwMzU1NzQyJyxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gICAgZ2l2ZW4oJ0kgYW0gb24gdGhlIHNlYXJjaCBwYWdlJywgKCkgPT4ge1xyXG4gICAgICBleHBlY3Qoc2NyZWVuKS50b0JlVHJ1dGh5KCk7XHJcbiAgICB9KTtcclxuICAgIHdoZW4oJ0kgc2VsZWN0IHRoZSBcIk1vdmllXCIgdGFiJywgKCkgPT4ge1xyXG4gICAgICBjb25zdCBtb3ZpZVRhYiA9IHNjcmVlbi5nZXRCeVRlc3RJZCgnbW92aWUtdGFiJyk7XHJcbiAgICAgIGFjdCgoKSA9PiB7XHJcbiAgICAgICAgZmlyZUV2ZW50LnByZXNzKG1vdmllVGFiKTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICAgIGFuZCgnSSBlbnRlciBcIk1hbm1hZGh1ZHVcIiBpbiB0aGUgc2VhcmNoIGlucHV0IGFuZCBoaXQgc3VibWl0JywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICBjb25zdCBzZWFyY2hCYXIgPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ3NlYXJjaC1tb3ZpZScpO1xyXG4gICAgICBjb25zdCBzdWJtaXRCdXR0b24gPSBzY3JlZW4uZ2V0QnlUZXN0SWQoJ3N1Ym1pdC1idXR0b24nKTtcclxuICAgICAgYWN0KCgpID0+IHtcclxuICAgICAgICBmaXJlRXZlbnQuY2hhbmdlVGV4dChzZWFyY2hCYXIsICdNYW5tYWRodWR1Jyk7XHJcbiAgICAgICAgZmlyZUV2ZW50LnByZXNzKHN1Ym1pdEJ1dHRvbik7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhlbignSSBzaG91bGQgc2VlIHRoZSBzZWFyY2ggcmVzdWx0cyBjYXJkJywgYXN5bmMgKCkgPT4ge1xyXG4gICAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcclxuICAgICAgICBjb25zdCBtb3ZpZVRpdGxlID0gc2NyZWVuLmdldEJ5VGV4dCgnTWFubWFkaHVkdScpO1xyXG4gICAgICAgIGNvbnN0IG1vdmllUmF0aW5nID0gc2NyZWVuLmdldEJ5VGV4dCgnUmF0aW5nOiBOL0EnKTtcclxuICAgICAgICBjb25zdCBtb3ZpZVllYXIgPSBzY3JlZW4uZ2V0QnlUZXh0KCcyMDAyJyk7XHJcbiAgICAgICAgZXhwZWN0KG1vdmllVGl0bGUpLnRvQmVUcnV0aHkoKTtcclxuICAgICAgICBleHBlY3QobW92aWVSYXRpbmcpLnRvQmVUcnV0aHkoKTtcclxuICAgICAgICBleHBlY3QobW92aWVZZWFyKS50b0JlVHJ1dGh5KCk7XHJcbiAgICAgIH0pO1xyXG4gICAgfSk7XHJcblxyXG4gICAgYW5kKCdJIHNob3VsZCBiZSBhYmxlIHRvIGNsaWNrIHRoZSBjYXJkIHRvIHZpZXcgbW9yZSBkZXRhaWxzJywgKCkgPT4ge30pO1xyXG4gIH0pO1xyXG59KTtcclxuIl0sIm1hcHBpbmdzIjoiQUFXQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsT0FBTyxDQUFDO0FBQ2xCRCxXQUFBLEdBQUtDLElBQUksQ0FBQywwQkFBMEIsRUFBRSxZQUFNO0VBQzFDLE9BQU87SUFDTEMsYUFBYSxFQUFFQyxJQUFJLENBQUNDLEVBQUUsRUFBRSxDQUFDQyxlQUFlLENBQUM7TUFDdkNDLFFBQVEsRUFBRUgsSUFBSSxDQUFDQyxFQUFFO0lBQ25CLENBQUM7RUFDSCxDQUFDO0FBQ0gsQ0FBQyxDQUFDO0FBQUMsSUFBQUcsc0JBQUEsR0FBQUMsT0FBQTtBQUFBLElBQUFDLGtCQUFBLEdBQUFGLHNCQUFBLENBQUFDLE9BQUE7QUFsQkgsSUFBQUUsWUFBQSxHQUFBRixPQUFBO0FBQ0FBLE9BQUE7QUFDQSxJQUFBRyxLQUFBLEdBQUFILE9BQUE7QUFDQSxJQUFBSSxhQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxPQUFBLEdBQUFMLE9BQUE7QUFFQSxJQUFBTSxLQUFBLEdBQUFQLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBTyxNQUFBLEdBQUFSLHNCQUFBLENBQUFDLE9BQUE7QUFBMEIsSUFBQVEsV0FBQSxHQUFBUixPQUFBO0FBQUEsU0FBQVIsWUFBQTtFQUFBLElBQUFpQixRQUFBLEdBQUFULE9BQUE7SUFBQUwsSUFBQSxHQUFBYyxRQUFBLENBQUFkLElBQUE7RUFBQUgsV0FBQSxZQUFBQSxZQUFBO0lBQUEsT0FBQUcsSUFBQTtFQUFBO0VBQUEsT0FBQUEs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